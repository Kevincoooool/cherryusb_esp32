/*
 * Copyright (c) 2024, udoudou
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#pragma once

#define MTP_STANDARD_VERSION 100
#define MTP_VENDOR_EXTN_ID		0x06
#define MTP_VENDOR_EXTN_VERSION		100
#define MTP_VENDOR_EXTENSIONDESC_CHAR   "microsoft.com: 1.0; android.com: 1.0;"

 /*
  * Functional Modes:
  */
typedef enum {
    MTP_FUNCTIONAL_STANDARD = 0x0000,
    MTP_FUNCTIONAL_SLEEP = 0x0001,
    MTP_FUNCTIONAL_MAX = 0xFFFF,
}__attribute__((packed)) mtp_functional_mode_t;

/* MTP Storage Type */
typedef enum {
    MTP_STORAGE_UNDEFINED = 0x0000,
    MTP_STORAGE_FIXED_ROM = 0x0001,
    MTP_STORAGE_REMOVABLE_ROM = 0x0002,
    MTP_STORAGE_FIXED_RAM = 0x0003,
    MTP_STORAGE_REMOVABLE_RAM = 0x0004,
    MTP_STORAGE_MAX = 0xFFFF,
}__attribute__((packed)) mtp_storage_type_t;

/* MTP File System Type */
typedef enum {
    MTP_FILE_SYSTEM_UNDEFINED = 0x0000,
    MTP_FILE_SYSTEM_GENERIC_FLAT = 0x0001,
    MTP_FILE_SYSTEM_GENERIC_HIERARCH = 0x0002,
    MTP_FILE_SYSTEM_DCF = 0x0003,
    MTP_FILE_SYSTEM_MAX = 0xFFFF,
}__attribute__((packed)) mtp_file_system_type_t;

/* MTP Class Requests */
#define MTP_REQUEST_CANCEL             0x64U
#define MTP_REQUEST_GET_EXT_EVENT_DATA 0x65U
#define MTP_REQUEST_RESET              0x66U
#define MTP_REQUEST_GET_DEVICE_STATUS  0x67U

/* MTP Container Types */
typedef enum {
    MTP_CONTAINER_UNDEFINED = 0,
    MTP_CONTAINER_OPERATION = 1,
    MTP_CONTAINER_DATA = 2,
    MTP_CONTAINER_RESPONSE = 3,
    MTP_CONTAINER_EVENT = 4,
    MTP_CONTAINER_MAX = 0xFFFF,
} __attribute__((packed)) mtp_container_type_t;

/* MTP Access Capability */
typedef enum {
    MTP_ACCESS_CAP_RW = 0x0000,
    MTP_ACCESS_CAP_RO_WITHOUT_DEL = 0x0001,
    MTP_ACCESS_CAP_RO_WITH_DEL = 0x0002,
    MTP_ACCESS_CAP_MAX = 0xFFFF,
} __attribute__((packed)) mtp_access_cap_t;

/*
 * MTP Class Specification Revision 1.1
 */

 /* MTP Standard Data Types Supported */
typedef enum {
    MTP_DATA_TYPE_UNDEF = 0x0000,
    MTP_DATA_TYPE_INT8 = 0x0001,
    MTP_DATA_TYPE_UINT8 = 0x0002,
    MTP_DATA_TYPE_INT16 = 0x0003,
    MTP_DATA_TYPE_UINT16 = 0x0004,
    MTP_DATA_TYPE_INT32 = 0x0005,
    MTP_DATA_TYPE_UINT32 = 0x0006,
    MTP_DATA_TYPE_INT64 = 0x0007,
    MTP_DATA_TYPE_UINT64 = 0x0008,
    MTP_DATA_TYPE_INT128 = 0x0009,
    MTP_DATA_TYPE_UINT128 = 0x000A,
#define MTP_DATA_TYPE_ARRAY     BIT14
    MTP_DATA_TYPE_AINT8 = 0x4001,
    MTP_DATA_TYPE_AUINT8 = 0x4002,
    MTP_DATA_TYPE_AINT16 = 0x4003,
    MTP_DATA_TYPE_AUINT16 = 0x4004,
    MTP_DATA_TYPE_AINT32 = 0x4005,
    MTP_DATA_TYPE_AUINT32 = 0x4006,
    MTP_DATA_TYPE_AINT64 = 0x4007,
    MTP_DATA_TYPE_AUINT64 = 0x4008,
    MTP_DATA_TYPE_AINT128 = 0x4009,
    MTP_DATA_TYPE_AUINT128 = 0x400A,
    MTP_DATA_TYPE_STR = 0xFFFF,
} __attribute__((packed)) mtp_data_type_t;

/* Appendix A - Object Formats */

/* MTP Object Format Codes */
typedef enum {
    MTP_OBJECT_FORMAT_UNDEFINED = 0x3000,
    MTP_OBJECT_FORMAT_ASSOCIATION = 0x3001,
    MTP_OBJECT_FORMAT_SCRIPT = 0x3002,
    MTP_OBJECT_FORMAT_EXECUTABLE = 0x3003,
    MTP_OBJECT_FORMAT_TEXT = 0x3004,
    MTP_OBJECT_FORMAT_HTML = 0x3005,
    MTP_OBJECT_FORMAT_DPOF = 0x3006,
    MTP_OBJECT_FORMAT_AIFF = 0x3007,
    MTP_OBJECT_FORMAT_WAVE = 0x3008,
    MTP_OBJECT_FORMAT_MP3 = 0x3009,
    MTP_OBJECT_FORMAT_AVI = 0x300A,
    MTP_OBJECT_FORMAT_MPEG = 0x300B,
    MTP_OBJECT_FORMAT_ASF = 0x300C,
    MTP_OBJECT_FORMAT_UNDEFINED_IMAGE = 0x3800,
    MTP_OBJECT_FORMAT_EXIF_JPEG = 0x3801,
    MTP_OBJECT_FORMAT_TIFF_EP = 0x3802,
    MTP_OBJECT_FORMAT_FLASHPIX = 0x3803,
    MTP_OBJECT_FORMAT_BMP = 0x3804,
    MTP_OBJECT_FORMAT_CIFF = 0x3805,
    MTP_OBJECT_FORMAT_UNDEFINED_RESERVED0 = 0x3806,
    MTP_OBJECT_FORMAT_GIF = 0x3807,
    MTP_OBJECT_FORMAT_JFIF = 0x3808,
    MTP_OBJECT_FORMAT_CD = 0x3809,
    MTP_OBJECT_FORMAT_PICT = 0x380A,
    MTP_OBJECT_FORMAT_PNG = 0x380B,
    MTP_OBJECT_FORMAT_UNDEFINED_RESERVED1 = 0x380C,
    MTP_OBJECT_FORMAT_TIFF = 0x380D,
    MTP_OBJECT_FORMAT_TIFF_IT = 0x380E,
    MTP_OBJECT_FORMAT_JP2 = 0x380F,
    MTP_OBJECT_FORMAT_JPX = 0x3810,
    MTP_OBJECT_FORMAT_UNDEFINED_FIRMWARE = 0xB802,
    MTP_OBJECT_FORMAT_WINDOWS_IMAGE_FORMAT = 0xB881,
    MTP_OBJECT_FORMAT_WBMP = 0xB803,
    MTP_OBJECT_FORMAT_JPEG_XR = 0xB804,
    MTP_OBJECT_FORMAT_UNDEFINED_AUDIO = 0xB900,
    MTP_OBJECT_FORMAT_WMA = 0xB901,
    MTP_OBJECT_FORMAT_OGG = 0xB902,
    MTP_OBJECT_FORMAT_AAC = 0xB903,
    MTP_OBJECT_FORMAT_AUDIBLE = 0xB904,
    MTP_OBJECT_FORMAT_FLAC = 0xB906,
    MTP_OBJECT_FORMAT_QCELP = 0xB907,
    MTP_OBJECT_FORMAT_AMR = 0xB908,
    MTP_OBJECT_FORMAT_UNDEFINED_VIDEO = 0xB980,
    MTP_OBJECT_FORMAT_WMV = 0xB981,
    MTP_OBJECT_FORMAT_MP4_CONTAINER = 0xB982,
    MTP_OBJECT_FORMAT_MP2 = 0xB983,
    MTP_OBJECT_FORMAT_3GP_CONTAINER = 0xB984,
    MTP_OBJECT_FORMAT_3G2 = 0xB985,
    MTP_OBJECT_FORMAT_AVCHD = 0xB986,
    MTP_OBJECT_FORMAT_ATSC_TS = 0xB987,
    MTP_OBJECT_FORMAT_DVB_TS = 0xB988,
    MTP_OBJECT_FORMAT_UNDEFINED_COLLECTION = 0xBA00,
    MTP_OBJECT_FORMAT_ABSTRACT_MULTIMEDIA_ALBUM = 0xBA01,
    MTP_OBJECT_FORMAT_ABSTRACT_IMAGE_ALBUM = 0xBA02,
    MTP_OBJECT_FORMAT_ABSTRACT_AUDIO_ALBUM = 0xBA03,
    MTP_OBJECT_FORMAT_ABSTRACT_VIDEO_ALBUM = 0xBA04,
    MTP_OBJECT_FORMAT_ABSTRACT_AUDIO_VIDEO_PLAYLIST = 0xBA05,
    MTP_OBJECT_FORMAT_ABSTRACT_CONTACT_GROUP = 0xBA06,
    MTP_OBJECT_FORMAT_ABSTRACT_MESSAGE_FOLDER = 0xBA07,
    MTP_OBJECT_FORMAT_ABSTRACT_CHAPTERED_PRODUCTION = 0xBA08,
    MTP_OBJECT_FORMAT_ABSTRACT_AUDIO_PLAYLIST = 0xBA09,
    MTP_OBJECT_FORMAT_ABSTRACT_VIDEO_PLAYLIST = 0xBA0A,
    MTP_OBJECT_FORMAT_ABSTRACT_MEDIACAST = 0xBA0B,
    MTP_OBJECT_FORMAT_WPL_PLAYLIST = 0xBA10,
    MTP_OBJECT_FORMAT_M3U_PLAYLIST = 0xBA11,
    MTP_OBJECT_FORMAT_MPL_PLAYLIST = 0xBA12,
    MTP_OBJECT_FORMAT_ASX_PLAYLIST = 0xBA13,
    MTP_OBJECT_FORMAT_PLS_PLAYLIST = 0xBA14,
    MTP_OBJECT_FORMAT_UNDEFINED_DOCUMENT = 0xBA80,
    MTP_OBJECT_FORMAT_ABSTRACT_DOCUMENT = 0xBA81,
    MTP_OBJECT_FORMAT_XML_DOCUMENT = 0xBA82,
    MTP_OBJECT_FORMAT_MICROSOFT_WORD_DOCUMENT = 0xBA83,
    MTP_OBJECT_FORMAT_MHT_COMPILED_HTML_DOCUMENT = 0xBA84,
    MTP_OBJECT_FORMAT_MICROSOFT_EXCEL_SPREADSHEET = 0xBA85,
    MTP_OBJECT_FORMAT_MICROSOFT_POWERPOINT_PRESEMTATION = 0xBA86,
    MTP_OBJECT_FORMAT_UNDEFINED_MESSAGE = 0xBB00,
    MTP_OBJECT_FORMAT_ABSTRACT_MESSAGE = 0xBB01,
    MTP_OBJECT_FORMAT_UNDEFINED_BOOKMARK = 0xBB10,
    MTP_OBJECT_FORMAT_ABSTRACT_BOOKMARK = 0xBB11,
    MTP_OBJECT_FORMAT_UNDEFINED_APPOINTMENT = 0xBB20,
    MTP_OBJECT_FORMAT_ABSTRACT_APPOINTMENT = 0xBB21,
    MTP_OBJECT_FORMAT_VCALENDAR_1_0 = 0xBB22,
    MTP_OBJECT_FORMAT_UNDEFINED_TASK = 0xBB40,
    MTP_OBJECT_FORMAT_ABSTRACT_TASK = 0xBB41,
    MTP_OBJECT_FORMAT_ICALENDAR = 0xBB42,
    MTP_OBJECT_FORMAT_UNDEFINED_NOTE = 0xBB60,
    MTP_OBJECT_FORMAT_ABSTRACT_NOTE = 0xBB61,
    MTP_OBJECT_FORMAT_UNDEFINED_CONTACT = 0xBB80,
    MTP_OBJECT_FORMAT_ABSTRACT_CONTACT = 0xBB81,
    MTP_OBJECT_FORMAT_VCARD_2 = 0xBB82,
    MTP_OBJECT_FORMAT_VCARD_3 = 0xBB83,

    MTP_OBJECT_FORMAT_MAX = 0xFFFF,
} __attribute__((packed)) mtp_object_format_code_t;

/* Operations Codes */
typedef enum {
    /* Appendix D - Operations */
    //PTP Operation Code 0x1000-0x1FFF
    MTP_OPERATION_GET_DEVICE_INFO = 0x1001,
    MTP_OPERATION_OPEN_SESSION = 0x1002,
    MTP_OPERATION_CLOSE_SESSION = 0x1003,
    MTP_OPERATION_GET_STORAGE_IDS = 0x1004,
    MTP_OPERATION_GET_STORAGE_INFO = 0x1005,
    MTP_OPERATION_GET_NUM_OBJECTS = 0x1006,
    MTP_OPERATION_GET_OBJECT_HANDLES = 0x1007,
    MTP_OPERATION_GET_OBJECT_INFO = 0x1008,
    MTP_OPERATION_GET_OBJECT = 0x1009,
    MTP_OPERATION_GET_THUMB = 0x100A,
    MTP_OPERATION_DELETE_OBJECT = 0x100B,
    MTP_OPERATION_SEND_OBJECT_INFO = 0x100C,
    MTP_OPERATION_SEND_OBJECT = 0x100D,
    MTP_OPERATION_INITIATE_CAPTURE = 0x100E,
    MTP_OPERATION_FORMAT_STORE = 0x100F,
    MTP_OPERATION_RESET_DEVICE = 0x1010,
    MTP_OPERATION_SELF_TEST = 0x1011,
    MTP_OPERATION_SET_OBJECT_PROTECTION = 0x1012,
    MTP_OPERATION_POWER_DOWN = 0x1013,
    MTP_OPERATION_GET_DEVICE_PROP_DESC = 0x1014,
    MTP_OPERATION_GET_DEVICE_PROP_VALUE = 0x1015,
    MTP_OPERATION_SET_DEVICE_PROP_VALUE = 0x1016,
    MTP_OPERATION_RESET_DEVICE_PROP_VALUE = 0x1017,
    MTP_OPERATION_TERMINATE_OPEN_CAPTURE = 0x1018,
    MTP_OPERATION_MOVE_OBJECT = 0x1019,
    MTP_OPERATION_COPY_OBJECT = 0x101A,
    MTP_OPERATION_GET_PARTIAL_OBJECT = 0x101B,
    MTP_OPERATION_INITIATE_OPEN_CAPTURE = 0x101C,
    //MTP Operation Code 0x9800-0x9FFF
    MTP_OPERATION_GET_OBJECT_PROPS_SUPPORTED = 0x9801,
    MTP_OPERATION_GET_OBJECT_PROP_DESC = 0x9802,
    MTP_OPERATION_GET_OBJECT_PROP_VALUE = 0x9803,
    MTP_OPERATION_SET_OBJECT_PROP_VALUE = 0x9804,

    MTP_OPERATION_GET_OBJECT_REFERENCES = 0x9810,
    MTP_OPERATION_SET_OBJECT_REFERENCES = 0x9811,
    MTP_OPERATION_SKIP = 0x9820,

    /* Appendix E - Enhanced Operations */
    MTP_OPERATION_GET_OBJECT_PROP_LIST = 0x9805,
    MTP_OPERATION_SET_OBJECT_PROP_LIST = 0x9806,
    MTP_OPERATION_GET_INTERDEPENDENT_PROP_DESC = 0x9807,
    MTP_OPERATION_GET_SEND_OBJECT_PROP_LIST = 0x9808,

    MTP_OPERATION_MAX = 0xFFFF,
} __attribute__((packed)) mtp_operation_code_t;

typedef struct {
    union {
        struct {
            uint32_t parameter1;
            uint32_t parameter2;
            uint32_t parameter3;
            uint32_t parameter4;
            uint32_t parameter5;
        }undefine;

        struct {
            uint32_t object_handle;
        }get_thumb;

        struct {
            uint32_t storage_id;
        }get_storage_info;

        struct {
            uint32_t storage_id;
            uint32_t object_format_code;    //可选参数
            uint32_t parent_handle;         //可选参数
        }get_object_handles;

        struct {
            uint32_t object_handle;
        }get_object_info;

        struct {
            uint32_t object_handle;
        }get_object;

        struct {
            uint32_t storage_id;        //可选参数
            uint32_t parent_handle;     //可选参数
        }send_object_info;

        struct {
            uint32_t object_handle;
            uint32_t object_format_code;     //可选参数
        }delete_object;

        struct {
            uint32_t object_handle;
            uint32_t offset;
            uint32_t max_bytes;
        }get_partial_object;
    };
}mtp_operation_container_t;

/* Appendix F - Response */

/* MTP Response Codes */
typedef enum {
    //PTP Response Code 0x2000-0x2FFF
    MTP_RESPONSE_UNDEFINED = 0x2000,
    MTP_RESPONSE_OK = 0x2001,
    MTP_RESPONSE_GENERAL_ERROR = 0x2002,
    MTP_RESPONSE_SESSION_NOT_OPEN = 0x2003,
    MTP_RESPONSE_INVALID_TRANSACTION_ID = 0x2004,
    MTP_RESPONSE_OPERATION_NOT_SUPPORTED = 0x2005,
    MTP_RESPONSE_PARAMETER_NOT_SUPPORTED = 0x2006,
    MTP_RESPONSE_INCOMPLETE_TRANSFER = 0x2007,
    MTP_RESPONSE_INVALID_STORAGE_ID = 0x2008,
    MTP_RESPONSE_INVALID_OBJECT_HANDLE = 0x2009,
    MTP_RESPONSE_DEVICE_PROP_NOT_SUPPORTED = 0x200A,
    MTP_RESPONSE_INVALID_OBJECT_FORMAT_CODE = 0x200B,
    MTP_RESPONSE_STORE_FULL = 0x200C,
    MTP_RESPONSE_OBJECT_WRITE_PROTECTED = 0x200D,
    MTP_RESPONSE_STORE_READ_ONLY = 0x200E,
    MTP_RESPONSE_ACCESS_DENIED = 0x200F,
    MTP_RESPONSE_NO_THUMBNAIL_PRESENT = 0x2010,
    MTP_RESPONSE_SELF_TEST_FAILED = 0x2011,
    MTP_RESPONSE_PARTIAL_DELETION = 0x2012,
    MTP_RESPONSE_STORE_NOT_AVAILABLE = 0x2013,
    MTP_RESPONSE_SPECIFICATION_BY_FORMAT_UNSUPPORTED = 0x2014,
    MTP_RESPONSE_NO_VALID_OBJECT_INFO = 0x2015,
    MTP_RESPONSE_INVALID_CODE_FORMAT = 0x2016,
    MTP_RESPONSE_UNKNOWN_VENDOR_CODE = 0x2017,
    MTP_RESPONSE_CAPTURE_ALREADY_TERMINATED = 0x2018,
    MTP_RESPONSE_DEVICE_BUSY = 0x2019,
    MTP_RESPONSE_INVALID_PARENT_OBJECT = 0x201A,
    MTP_RESPONSE_INVALID_DEVICE_PROP_FORMAT = 0x201B,
    MTP_RESPONSE_INVALID_DEVICE_PROP_VALUE = 0x201C,
    MTP_RESPONSE_INVALID_PARAMETER = 0x201D,
    MTP_RESPONSE_SESSION_ALREADY_OPEN = 0x201E,
    MTP_RESPONSE_TRANSACTION_CANCELLED = 0x201F,
    MTP_RESPONSE_SPECIFICATION_OF_DESTINATION_UNSUPPORTED = 0x2020,
    //MTP Response Code 0xA800-0xAFFF
    MTP_RESPONSE_INVALID_OBJECT_PROP_CODE = 0xA801,
    MTP_RESPONSE_INVALID_OBJECT_PROP_FORMAT = 0xA802,
    MTP_RESPONSE_INVALID_OBJECT_PROP_VALUE = 0xA803,
    MTP_RESPONSE_INVALID_OBJECT_REFERENCE = 0xA804,
    MTP_RESPONSE_GROUP_NOT_SUPPORTED = 0xA805,
    MTP_RESPONSE_INVALID_DATASET = 0xA806,
    MTP_RESPONSE_SPECIFICATION_BY_GROUP_UNSUPPORTED = 0xA807,
    MTP_RESPONSE_SPECIFICATION_BY_DEPTH_UNSUPPORTED = 0xA808,
    MTP_RESPONSE_OBJECT_TOO_LARGE = 0xA809,
    MTP_RESPONSE_OBJECT_PROP_NOT_SUPPORTED = 0xA80A,

    MTP_RESPONSE_MAX = 0xFFFF,
} __attribute__((packed)) mtp_response_code_t;

typedef struct {
    union {
        struct {
            uint32_t parameter1;
            uint32_t parameter2;
            uint32_t parameter3;
            uint32_t parameter4;
            uint32_t parameter5;
        }undefine;

        struct {
            uint32_t storage_id;
            uint32_t parent_handle;;
            uint32_t object_handle;
        }send_object_info;

        struct {
            uint32_t actual_bytes;
        }get_partial_object;
    };
}mtp_response_container_t;


typedef struct {
    mtp_operation_code_t code;
    uint32_t transaction_id;
    uint8_t payload[0];
}mtp_data_container_t;

/* MTP Association Type */
typedef enum {
    MTP_ASSOCIATION_UNDEFINED = 0x0000,
    MTP_ASSOCIATION_GENERIC_FOLDER = 0x0001,
    MTP_ASSOCIATION_MAX = 0xFFFF,
}__attribute__((packed)) mtp_association_type_t;

/* Appendix G. Events */

/*  MTP Event Codes */
typedef enum {
    MTP_EVENT_UNDEFINED = 0x4000,
    MTP_EVENT_CANCEL_TRANSACTION = 0x4001,
    MTP_EVENT_OBJECT_ADDED = 0x4002,
    MTP_EVENT_OBJECT_REMOVED = 0x4003,
    MTP_EVENT_STORE_ADDED = 0x4004,
    MTP_EVENT_STORE_REMOVED = 0x4005,
    MTP_EVENT_DEVICE_PROP_CHANGED = 0x4006,
    MTP_EVENT_OBJECT_INFO_CHANGED = 0x4007,
    MTP_EVENT_DEVICE_INFO_CHANGED = 0x4008,
    MTP_EVENT_REQUEST_OBJECT_TRANSFER = 0x4009,
    MTP_EVENT_STORE_FULL = 0x400A,
    MTP_EVENT_DEVICE_RESET = 0x400B,
    MTP_EVENT_STORAGE_INFO_CHANGED = 0x400C,
    MTP_EVENT_CAPTURE_COMPLETE = 0x400D,
    MTP_EVENT_UNREPORTED_STATUS = 0x400E,
    MTP_EVENT_OBJECT_PROP_CHANGED = 0xC801,
    MTP_EVENT_DEVICE_PROP_DESC_CHANGED = 0xC802,
    MTP_EVENT_OBJECT_REFERENCES_CHANGED = 0xC803,
    MTP_EVENT_MAX = 0xFFFF,
}__attribute__((packed)) mtp_event_code_t;

typedef struct {
    uint32_t len;
    mtp_container_type_t type;
    union {
        mtp_operation_code_t opt;
        mtp_response_code_t res;
    };
    uint32_t trans_id;
    union {
        mtp_operation_container_t operation;
        uint8_t data[0];
        mtp_response_container_t response;
    };
}mtp_container_t;

#define MTP_CONTAINER_HEAD_LEN offsetof(mtp_container_t, data)
